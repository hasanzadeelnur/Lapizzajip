@using Application.Features.ContactUs.Queries.GetData
@using Infrastructure.Dtos.Messages
@model CreateMessageDto
@{
    GetContactUsResponse contactUs = await generalRepository.GetContactUs() as GetContactUsResponse ?? new();
    Dictionary<string, string> textTranslations = await generalRepository.GetTranslations();
    Dictionary<string, string> settings = await generalRepository.GetSettings();
    TempData["Title"] = contactUs.MetaTitle;
    TempData["MetaKeywords"] = contactUs.MetaKeys;
    TempData["MetaDescription"] = contactUs.MetaDescription;
}
<section id="top" class="page-banner" style="background: var(--theme-color) url(@settings["contact_us_cover_image"]) no-repeat center / cover;">
    <div class="container">
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12">
                <div class="page-title">
                    <h1 class="page-headding wow fadeInUp">@textTranslations["contact_us_page_title"]</h1>
                    <ul class="wow fadeInUp">
                        <li><a asp-controller="Home" asp-action="Index" class="page-name">@textTranslations["home_page_title"]</a></li>
                        <li>@textTranslations["contact_us_page_title"]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="contact ptb">
    <div class="container">
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12">
                <div class="headding-part text-center">
                    <p class="headding-sub wow fadeInUp">@textTranslations["contact_us_get_in_touch_title"]</p>
                    <h2 class="headding-title text-uppercase fw-bold wow fadeInUp">@textTranslations["contact_us_get_in_touch_subtitle"]</h2>
                </div>
            </div>
        </div>
        <div class="contact-in">
            <div class="row">
                <div class="col-xl-4 col-lg-4 col-md-5 wow fadeInLeft">
                    <div class="contact-detail">
                        @Html.Raw(contactUs.Description)
                        <ul>
                            <li><i class="fa fa-home" aria-hidden="true"></i><div class="con-list">@contactUs?.Address</div></li>
                            <li>
                                <i class="fa fa-phone" aria-hidden="true"></i><div class="con-list">
                                    @foreach (string phone in contactUs?.Phones?.Split(',') ?? [])
                                    {
                                        <a href="tel:@phone">@phone</a>
                                    }
                                </div>
                            </li>
                            <li>
                                <i class="fa fa-envelope" aria-hidden="true"></i><div class="con-list">
                                    @foreach (string email in contactUs?.Emails?.Split(',') ?? [])
                                    {
                                        <a href="mailto:@email">@email</a>
                                    }
                                </div>
                            </li>
                            <li>
                                <i class="fa fa-clock-o" aria-hidden="true"></i>
                                <div class="con-list">
                                    @foreach (string workingHour in contactUs?.WorkingHours?.Split(',') ?? [])
                                    {
                                        <span>@workingHour</span>
                                    }
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-xl-8 col-lg-8 col-md-7 wow fadeInRight">
                    <div class="leave">
                        <form method="post" id="contact-form" asp-controller="ContactUs" asp-action="Index">
                            <input asp-for="ReCaptchaKey" id="reCaptchaKeyInput" type="hidden" />
                            <input asp-for="IPAddress" id="ipAddressInput" type="hidden" />
                            <div class="form-group">
                                <input type="text" class="form-control" asp-for="CustomerName"
                                       placeholder="@textTranslations["contact_us_get_in_touch_your_name_placeholder"]" required>
                                <span asp-validation-for="CustomerName" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <input type="email" class="form-control" asp-for="CustomerEmail"
                                       placeholder="@textTranslations["contact_us_get_in_touch_your_email_placeholder"]" required>
                                <span asp-validation-for="CustomerEmail" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="text" class="form-control" asp-for="CustomerPhone"
                                       placeholder="@textTranslations["contact_us_get_in_touch_your_phone_placeholder"]" required>
                                <span asp-validation-for="CustomerPhone" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="text" class="form-control" asp-for="Subject"
                                       placeholder="@textTranslations["contact_us_get_in_touch_your_subject_placeholder"]" required>
                                <span asp-validation-for="Subject" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <textarea asp-for="Message" cols="30" rows="4" class="form-control"
                                          placeholder="@textTranslations["contact_us_get_in_touch_your_message_placeholder"]" required></textarea>
                                <span asp-validation-for="Message" class="text-danger"></span>
                            </div>
                            <button type="submit" class="theme-btn g-recaptcha"
                                    data-sitekey="@(_configuration["ReCaptchaClientSide"])"
                                    data-callback='onSubmit'
                                    data-action='submit'>
                                @textTranslations["contact_us_get_in_touch_button"] <i class="far fa-paper-plane"></i>
                            </button>
                            <input type="submit" name="submit" value="@textTranslations["contact_us_get_in_touch_button"]" class="post-com text-success" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="contact-map wow fadeInUp">
    <div id="map"></div>
</section>

@section Styles
{
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <style>
        #map {
            height: 480px;
            z-index: -1;
        }
    </style>
}

@section Scripts
{
    <script src="https://www.google.com/recaptcha/api.js"></script>
    <script>
            var map = L.map('map', {
            // Set latitude and longitude of the map center (required)
            center: [@contactUs?.OfficeMapX, @contactUs?.OfficeMapY],
            // Set the initial zoom level, values 0-18, where 0 is most zoomed-out (required)
            zoom: 11
        });


        // Create a Tile Layer and add it to the map
        var tiles = new L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            minZoom: '15'
        }).addTo(map);

        var marker = L.marker(
            [@contactUs?.OfficeMapX, @contactUs?.OfficeMapY],
            {
                draggable: true,
                title: "",
                opacity: 0.75
            });
        marker.addTo(map);

        function getIPAddress() {
            // Fetch the IP address from the API
            fetch("https://api.ipify.org?format=json")
                .then(response => response.json())
                .then(data => {
                    // Display the IP address on the screen
                    document.getElementById("ipAddressInput").value = data.ip;
                }).catch(error => { });
        }

        function onSubmit(token) {
            getIPAddress();
            document.getElementById("reCaptchaKeyInput").value = token;
            var validator = $("#contact-form").validate();
            var checkValidator = validator.form();
            if (checkValidator) {
                document.getElementById("contact-form").submit();
            }
        }
    </script>
}